<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Swagger.Net.Dummy.Core</name>
    </assembly>
    <members>
        <member name="M:Swagger.Net.Dummy.Controllers.NestedEnum`1.Get(System.Nullable{Swagger.Net.Dummy.Controllers.NestedEnum{`0}.Giorno})">
            <summary>NestedEnum test</summary>
        </member>
        <member name="M:Swagger.Net.Dummy.Controllers.NestedEnum`1.Put(Swagger.Net.Dummy.Controllers.NestedEnum{`0}.Giorno)">
            <summary>NestedEnum test</summary>
        </member>
        <member name="M:Swagger.Net.Dummy.Controllers.Blob`1.Get(System.Nullable{System.Int32})">
            <summary>GET</summary>
        </member>
        <member name="M:Swagger.Net.Dummy.Controllers.Blob`1.Post(System.Int32)">
            <summary>POST</summary>
        </member>
        <member name="M:Swagger.Net.Dummy.Controllers.Blob`1.Put(Swagger.Net.Dummy.Controllers.AnotherFoo{`0})">
            <summary>PUT</summary>
        </member>
        <member name="M:Swagger.Net.Dummy.Controllers.Blob`3.Patch(Swagger.Net.Dummy.Controllers.AnotherFoo{`2},`0)">
            <summary>PATCH</summary>
        </member>
        <member name="M:Swagger.Net.Dummy.Controllers.BaseChildController.Get">
            <summary>
            Get some ...
            </summary>
        </member>
        <member name="M:Swagger.Net.Dummy.Controllers.BaseController`1.Get(`0)">
            <summary>
            Get a record by the given key.
            </summary>
        </member>
        <member name="M:Swagger.Net.Dummy.Controllers.BaseController`1.Post(System.String)">
            <summary>
            Post a record.
            </summary>
        </member>
        <member name="M:Swagger.Net.Dummy.Controllers.BaseController`1.Put(`0,System.String)">
            <summary>
            Put a record by the given key.
            </summary>
        </member>
        <member name="M:Swagger.Net.Dummy.Controllers.BaseController`1.Delete(System.Int64)">
            <summary>
            Delete a record by the given key.
            </summary>
        </member>
        <member name="P:Swagger.Net.Dummy.Controllers.Payment.ExpMonth">
            <summary>Credit card expiration Month</summary>
            <example>6</example>
        </member>
        <member name="P:Swagger.Net.Dummy.Controllers.Payment.ExpYear">
            <summary>Credit card expiration Year</summary>
            <example>96</example>
        </member>
        <member name="T:Swagger.Net.Dummy.Controllers.XmlAnnotatedController">
            <summary>
            XmlAnnotatedController
            </summary>
        </member>
        <member name="M:Swagger.Net.Dummy.Controllers.XmlAnnotatedController.Create(Swagger.Net.Dummy.Controllers.Account)">
            <summary>
            Registers a new Account based on <paramref name="account"/>.
            </summary>
            <remarks>Create an <see cref="T:Swagger.Net.Dummy.Controllers.Account"/> to access restricted resources</remarks>
            <param name="account">Details for the account to be created</param>
            <response code="201"><paramref name="account"/> created</response>
            <response code="400">Username already in use</response>
        </member>
        <member name="M:Swagger.Net.Dummy.Controllers.XmlAnnotatedController.UpdateSubAccount(Swagger.Net.Dummy.Controllers.SubAccount)">
            <summary>
            Updates a SubAccount.
            </summary>
        </member>
        <member name="M:Swagger.Net.Dummy.Controllers.XmlAnnotatedController.Search(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Search all registered accounts by keywords
            </summary>
            <remarks>Restricted to admin users only</remarks>
            <param name="keywords">List of search keywords</param>
            <returns></returns>
        </member>
        <member name="M:Swagger.Net.Dummy.Controllers.XmlAnnotatedController.Filter(System.String,Swagger.Net.Dummy.Controllers.Page)">
            <summary>
            Filters account based on the given parameters.
            </summary>
            <param name="q">The search query on which to filter accounts</param>
            <param name="page">A complex type describing the paging to be used for the request</param>
            <returns></returns>
        </member>
        <member name="M:Swagger.Net.Dummy.Controllers.XmlAnnotatedController.PutOnHold(System.Int32)">
            <summary>
            Prevents the account from being used
            </summary>
        </member>
        <member name="M:Swagger.Net.Dummy.Controllers.XmlAnnotatedController.AddReward(System.Int32,Swagger.Net.Dummy.Controllers.Reward{System.String})">
            <summary>
            Adds a reward to an existing account
            </summary>
            <param name="id"></param>
            <param name="reward"></param>
        </member>
        <member name="M:Swagger.Net.Dummy.Controllers.XmlAnnotatedController.UpdateMetadata(System.Int32,System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            Updates metadata associated with an account
            </summary>
            <param name="id"></param>
            <param name="metadata"></param>
        </member>
        <member name="T:Swagger.Net.Dummy.Controllers.NoSummary">
            <example>
            {"id":0}
            </example>
        </member>
        <member name="P:Swagger.Net.Dummy.Controllers.Page.Limit">
            <summary>
            The maximum number of accounts to return
            </summary>
        </member>
        <member name="P:Swagger.Net.Dummy.Controllers.Page.Offset">
            <summary>
            Offset into the result
            </summary>
        </member>
        <member name="T:Swagger.Net.Dummy.Controllers.Account">
            <summary>
            Account details
            </summary>
        </member>
        <member name="P:Swagger.Net.Dummy.Controllers.Account.AccountID">
            <summary>
            The ID for Accounts is 5 digits long.
            </summary>
            <example>78312</example>
        </member>
        <member name="P:Swagger.Net.Dummy.Controllers.Account.Username">
            <summary>
            Uniquely identifies the account
            </summary>
            <example>TestUser</example>
        </member>
        <member name="P:Swagger.Net.Dummy.Controllers.Account.Password">
            <summary>
            For authentication
            </summary>
            <example>TestPassword</example>
        </member>
        <member name="F:Swagger.Net.Dummy.Controllers.Account.Note">
            <summary>
            Just a note
            </summary>
            <example>HelloWorld</example>
        </member>
        <member name="P:Swagger.Net.Dummy.Controllers.Account.AccountPreferences.DisplayName">
            <summary>
            Provide a display name to use instead of Username when signed in
            </summary>
        </member>
        <member name="P:Swagger.Net.Dummy.Controllers.Account.AccountPreferences.AllowMarketingEmails">
            <summary>
            Flag to indicate if marketing emails may be sent
            </summary>
        </member>
        <member name="T:Swagger.Net.Dummy.Controllers.SubAccount">
            <summary>
            A Sub-Type of Account
            </summary>
        </member>
        <member name="P:Swagger.Net.Dummy.Controllers.SubAccount.AccountID">
            <summary>
            The Account ID for SubAccounts should be 7 digits.
            </summary>
        </member>
        <member name="T:Swagger.Net.Dummy.Controllers.Reward`1">
            <summary>
            A redeemable reward
            </summary>
            <example>{"value":0, "RewardType":{}}</example>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Swagger.Net.Dummy.Controllers.Reward`1.value">
            <summary>
            The monetary value of the reward
            </summary>
        </member>
        <member name="P:Swagger.Net.Dummy.Controllers.Reward`1.RewardType">
            <summary>
            The reward type
            </summary>
        </member>
    </members>
</doc>
